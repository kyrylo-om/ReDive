# Generated by Django 5.1.7 on 2025-04-08 22:15

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("data_app", "0004_remove_person_history_delete_history_delete_person"),
    ]

    operations = [
        migrations.CreateModel(
            name="History",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=75)),
                ("date", models.CharField(max_length=75)),
            ],
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=75)),
                ("date", models.DateField()),
                ("karma", models.IntegerField()),
                ("link_karma", models.IntegerField()),
                ("comment_karma", models.IntegerField()),
                ("is_mod", models.BooleanField()),
                ("is_employee", models.BooleanField()),
                ("is_gold", models.BooleanField()),
                ("verified", models.BooleanField()),
                ("has_verified_email", models.BooleanField()),
                ("bot_likelihood_percent", models.IntegerField()),
                (
                    "history",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data_app.history",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("body", models.TextField()),
                ("score", models.IntegerField()),
                ("subreddit", models.CharField(max_length=100)),
                ("url", models.URLField()),
                ("created_date", models.DateField()),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="data_app.person",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=300)),
                ("subreddit", models.CharField(max_length=100)),
                ("permalink", models.URLField()),
                ("url", models.URLField()),
                ("score", models.IntegerField()),
                ("upvotes_ratio", models.FloatField()),
                ("created_date", models.DateField()),
                ("num_comments", models.IntegerField()),
                ("over_18", models.BooleanField()),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        to="data_app.person",
                    ),
                ),
            ],
        ),
    ]
